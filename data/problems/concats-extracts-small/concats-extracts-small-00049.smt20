(declare-fun var0 () String)
(declare-fun var1 () String)
(declare-fun var2 () String)
(declare-fun var3 () String)
(declare-fun var4 () String)
(declare-fun var5 () String)
(declare-fun var6 () String)
(declare-fun var7 () String)
(declare-fun var8 () String)
(declare-fun var9 () String)
(declare-fun var10 () String)
(declare-fun var11 () String)
(declare-fun var12 () String)
(declare-fun var13 () String)
(declare-fun var14 () String)
(declare-fun var15 () String)
(declare-fun var16 () String)
(declare-fun var17 () String)
(declare-fun var18 () String)
(declare-fun var19 () String)
(declare-fun var20 () String)
(declare-fun var21 () String)
(declare-fun var22 () String)
(declare-fun var23 () String)
(declare-fun var24 () String)
(declare-fun var25 () String)
(declare-fun var26 () String)
(declare-fun var27 () String)
(declare-fun var28 () String)
(declare-fun var29 () String)
(declare-fun var30 () String)
(declare-fun var31 () String)
(declare-fun var32 () String)
(declare-fun var33 () String)
(declare-fun var34 () String)
(declare-fun var35 () String)
(declare-fun var36 () String)
(declare-fun var37 () String)
(declare-fun var38 () String)
(declare-fun var39 () String)
(declare-fun var40 () String)
(declare-fun var41 () String)
(declare-fun var42 () String)
(declare-fun var43 () String)
(declare-fun var44 () String)
(declare-fun var45 () String)
(declare-fun var46 () String)
(declare-fun var47 () String)
(declare-fun var48 () String)
(declare-fun var49 () String)
(declare-fun var50 () String)
(declare-fun var51 () String)
(declare-fun var52 () String)
(declare-fun var53 () String)
(declare-fun var54 () String)
(declare-fun var55 () String)
(declare-fun var56 () String)
(declare-fun var57 () String)
(declare-fun var58 () String)
(declare-fun var59 () String)
(declare-fun var60 () String)
(assert (= var0 (Concat var1 var2)))
(assert (= var2 (Concat var3 var4)))
(assert (= var4 (Concat var5 var6)))
(assert (= var6 (Concat var7 var8)))
(assert (= var8 (Concat var9 var10)))
(assert (= var10 (Concat var11 var12)))
(assert (= var12 (Concat var13 var14)))
(assert (= var14 (Concat var15 var16)))
(assert (= var16 (Concat var17 var18)))
(assert (= var18 (Concat var19 var20)))
(assert (= var20 (Concat var21 var22)))
(assert (= var22 (Concat var23 var24)))
(assert (= var24 (Concat var25 var26)))
(assert (= var26 (Concat var27 var28)))
(assert (= var28 (Concat var29 var30)))
(assert (= var30 (Concat var31 var32)))
(assert (= var32 (Concat var33 var34)))
(assert (= var34 (Concat var35 var36)))
(assert (= var36 (Concat var37 var38)))
(assert (= var38 (Concat var39 var40)))
(assert (= var40 (Concat var41 var42)))
(assert (= var42 (Concat var43 var44)))
(assert (= var44 (Concat var45 var46)))
(assert (= var46 (Concat var47 var48)))
(assert (= var48 (Concat var49 var50)))
(assert (= var50 (Concat var51 var52)))
(assert (= var52 (Concat var53 var54)))
(assert (= var54 (Concat var55 var56)))
(assert (= var56 (Concat var57 var58)))
(assert (= var58 (Concat var59 var60)))
(assert (= var0 "solution"))
(assert (= "f" (CharAt var44 97)))
(assert (= "." (CharAt var38 66)))
(assert (= "!" (CharAt var26 79)))
(assert (= "D" (CharAt var40 36)))
(assert (= "0" (CharAt var9 36)))
(assert (= "=" (CharAt var47 57)))
(assert (= "5" (CharAt var20 18)))
(assert (= "#" (CharAt var7 93)))
(assert (= "r" (CharAt var25 69)))
(assert (= ";" (CharAt var44 47)))
(assert (= "B" (CharAt var46 23)))
(assert (= "i" (CharAt var2 56)))
(assert (= ":" (CharAt var12 33)))
(assert (= "I" (CharAt var28 10)))
(assert (= "a" (CharAt var1 29)))
(assert (= "A" (CharAt var35 64)))
(assert (= "%" (CharAt var8 37)))
(assert (= "T" (CharAt var44 45)))
(assert (= "V" (CharAt var42 9)))
(assert (= "3" (CharAt var43 80)))
(assert (= "$" (CharAt var9 55)))
(assert (= "W" (CharAt var25 85)))
(assert (= ")" (CharAt var13 90)))
(assert (= "'" (CharAt var34 27)))
(assert (= "n" (CharAt var33 59)))
(assert (= "S" (CharAt var3 39)))
(assert (= ":" (CharAt var28 61)))
(assert (= "$" (CharAt var38 80)))
(assert (= "}" (CharAt var40 42)))
(assert (= "}" (CharAt var42 73)))
(assert (= "S" (CharAt var30 78)))
(assert (= "H" (CharAt var56 18)))
(assert (= "E" (CharAt var60 43)))
(assert (= "T" (CharAt var57 69)))
(assert (= "?" (CharAt var57 56)))
(assert (= "U" (CharAt var29 56)))
(assert (= "U" (CharAt var43 30)))
(assert (= "j" (CharAt var2 42)))
(assert (= "~" (CharAt var30 18)))
(assert (= "V" (CharAt var27 68)))
(assert (= "0" (CharAt var25 21)))
(assert (= "Y" (CharAt var51 51)))
(assert (= "J" (CharAt var20 87)))
(assert (= "0" (CharAt var20 95)))
(assert (= "K" (CharAt var13 26)))
(assert (= "p" (CharAt var36 97)))
(assert (= "_" (CharAt var48 60)))
(assert (= "a" (CharAt var37 86)))
(assert (= "h" (CharAt var29 89)))
(check-sat)